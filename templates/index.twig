{% extends 'base.twig' %}
{% block title %}{{ _("Inicio") }}{% endblock %}

{% block content %}
<div class="container">
    <h1 class="text-center text-primary mb-4 fs-2">{{ _("Bienvenido a Libronia") }}</h1>

    <!-- Banner de imagen -->
    <div class="banner-container mb-4">
        <img src="/assets/images/misc/bannerog.jpg" alt="{{ _("Banner de Libronia") }}" class="banner-image img-fluid">
    </div>

    <div class="alert alert-success text-center mb-4" role="alert">
        <p class="small mb-0">{{ _("¡Explora nuestras categorías y descubre nuevas lecturas!") }}</p>
    </div>

    <!-- Formulario de búsqueda -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body p-3">
                    <h5 class="card-title text-secondary fs-6">{{ _("Buscar y explorar libros") }}</h5>
                    <form action="/buscar" method="GET">
                        <div class="input-group">
                            <input type="text" name="q" class="form-control form-control-sm" placeholder="{{ _("Escribe el nombre del libro o autor...") }}" required>
                            <button class="btn btn-primary btn-sm" type="submit">{{ _("Buscar") }}</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Sección de categorías con menú desplegable en móvil -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body p-3">
                    <!-- Botón desplegable para categorías -->
                    <button class="btn btn-secondary w-100 d-flex justify-content-between align-items-center collapsed" 
                            type="button" 
                            data-bs-toggle="collapse" 
                            data-bs-target="#categoriasCollapse" 
                            aria-expanded="false" 
                            aria-controls="categoriasCollapse">
                        <span class="fs-6">{{ _("Categorías") }}</span>
                        <i class="fas fa-chevron-down"></i>
                    </button>

                    <!-- Contenido desplegable -->
                    <div class="collapse" id="categoriasCollapse">
                        <div class="pt-3">
                            <div class="list-group">
                                {% for categoria in categorias %}
                                <a href="/categoria/{{ categoria|url_encode }}" 
                                   class="list-group-item list-group-item-action">
                                    {{ categoria }}
                                </a>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="alert alert-info text-center mt-4 mb-4" role="alert">
        <p class="small mb-0">{{ _("¡Sigue explorando y encuentra tu próxima lectura favorita!") }}</p>
    </div>

    <!-- Mapa -->
    <div class="card mt-4">
        <div class="card-body p-3">
            <h5 class="card-title text-secondary fs-6">{{ _("Bibliotecas cercanas a tu ubicación:") }}</h5>
            <div class="map-container">
                <div id="map" class="rounded"></div>
            </div>
        </div>
    </div>
</div>

{% block scripts %}    
<script src="/assets/leaflet/leaflet.js"></script>
<script src="https://kit.fontawesome.com/your-font-awesome-kit.js"></script>
<script>
    // Ajustar el mapa al tamaño de la pantalla
    function adjustMapHeight() {
        const mapElement = document.getElementById('map');
        if (window.innerWidth < 768) {
            mapElement.style.height = '300px';
        } else {
            mapElement.style.height = '400px';
        }
    }

    // Llamar a la función cuando se carga la página y cuando se redimensiona
    window.addEventListener('load', adjustMapHeight);
    window.addEventListener('resize', adjustMapHeight);

    var redIcon = new L.Icon({
        iconUrl: '/assets/leaflet/images/marker-icon-red.png',
        shadowUrl: '/assets/leaflet/images/marker-shadow.png',
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowSize: [41, 41]
    });

    // Ubicación central
    var ILocation = [41.45551, 2.20150];
    var map = L.map('map').setView(ILocation, 16);

    // Cargamos la capa de OpenStreetMap
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {}).addTo(map);

    // Marcador para la ubicación actual
    L.marker(ILocation, { icon: redIcon }).addTo(map)
        .bindPopup('{{ _("Estás Aquí") }}')
        .openPopup();

    // Agregamos marcadores de "bibliotecas" (ubicaciones inventadas)
    L.marker([41.45700, 2.20300]).addTo(map)
        .bindPopup('{{ _("Biblioteca del Saber") }}');

    L.marker([41.45400, 2.20000]).addTo(map)
        .bindPopup('{{ _("Centro de Lectura Aurora") }}');

    L.marker([41.45600, 2.20600]).addTo(map)
        .bindPopup('{{ _("Archivo de Letras") }}');

    L.marker([41.45350, 2.20350]).addTo(map)
        .bindPopup('{{ _("Sala del Conocimiento") }}');
</script>
{% endblock %}

{% endblock %}